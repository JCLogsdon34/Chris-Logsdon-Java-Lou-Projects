<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <bean id="io" class="com.mycompany.flooringmasterylou.userio.UserIOImpl"/>
   
    <bean id="view" class="com.mycompany.flooringmasterylou.userio.View">
        <constructor-arg ref="io"/>
    </bean>
    
    <bean id="daoTax" 
          class="com.mycompany.flooringmasterylou.dao.DaoTaxImpl"/>
    
    <bean id="daoProduct" 
          class="com.mycompany.flooringmasterylou.dao.DaoProductImpl"/>
        
    <bean id="daoOrder" 
          class="com.mycompany.flooringmasterylou.dao.DaoOrderProductionImpl"/>
    
    <bean id="auditDao" 
          class="com.mycompany.flooringmasterylou.dao.AuditDaoImpl"/>
        
    <bean id="service"
          class="com.mycompany.flooringmasterylou.service.ServiceLayerImpl">
        <constructor-arg ref="daoTax"/>
        <constructor-arg ref="daoProduct"/>       
        <constructor-arg ref="daoOrder"/>       
    </bean>
    
    <bean id="daoTrain" 
          class="com.mycompany.flooringmasterylou.dao.DaoOrderTrainingImpl"/> 
    
    <bean id="training" 
          class="com.mycompany.flooringmasterylou.service.SLTrainingImpl">
        <constructor-arg ref="daoTax"/>
        <constructor-arg ref="daoProduct"/>       
        <constructor-arg ref="daoTrain"/>       
    </bean>
    
    <bean id="loggingAdvice" class="com.mycompany.flooringmasterylou.Advice.LoggingAdvice">
        <constructor-arg ref="auditDao"/>
    </bean>   
    <aop:config>       
        <aop:aspect ref="loggingAdvice">
            <aop:after-returning
                method="createAuditEntry"
                pointcut="execution(* com.mycompany.flooringmasterylou.service.ServiceLayer.createOrder(..))"/>
         
            <aop:after-returning 
                method="createAuditEntry"
                pointcut="execution(* com.mycompany.flooringmasterylou.service.ServiceLayer.editOrder(..))"/>
            
            <aop:after-returning
                method="createAuditEntry"
                pointcut="execution(* com.mycompany.flooringmasterylou.service.ServiceLayer.removeOrder(..))"/>
            
            <aop:after-throwing 
                method="logExceptions"
                throwing="e"
                pointcut="execution(* com.mycompany.flooringmasterylou.service.ServiceLayer.createOrder(..))"/>
                
                <aop:after-throwing 
                method="logExceptions"
                throwing="e"
                pointcut="execution(* com.mycompany.flooringmasterylou.service.ServiceLayer.computeProductCosts(..))"/>
        </aop:aspect>
    </aop:config> 
    
    <bean id="controller" 
              class="com.mycompany.flooringmasterylou.controller.Controller">
        <constructor-arg ref="service"/>
        <constructor-arg ref="view"/>
    </bean>
    
    <bean id="controllerTraining" 
              class="com.mycompany.flooringmasterylou.controller.Controller">
        <constructor-arg ref="training"/>
        <constructor-arg ref="view"/>
    </bean>
    
</beans>

